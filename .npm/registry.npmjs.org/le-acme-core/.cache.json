{"_id":"le-acme-core","_rev":"12-f2b2510ac9748bc12437a6b995b4fb3b","name":"le-acme-core","description":"A framework for building letsencrypt clients, forked from letiny","dist-tags":{"latest":"2.1.1"},"versions":{"2.0.5":{"name":"le-acme-core","version":"2.0.5","description":"A framework for building letsencrypt clients, forked from letiny","main":"node.js","browser":"browser.js","directories":{"example":"example","test":"test"},"scripts":{"test":"node example/letsencrypt.js"},"repository":{"type":"git","url":"git+https://github.com/Daplie/le-acme-core.git"},"license":"MPL-2.0","bugs":{"url":"https://github.com/Daplie/le-acme-core/issues"},"homepage":"https://github.com/Daplie/le-acme-core#readme","keywords":["le-acme","le-acme-","tiny","acme","letsencrypt","client","pem","jwk","pfx"],"dependencies":{"request":"^2.55.0","rsa-compat":"^1.2.4"},"contributors":[{"name":"ISRG"},{"name":"Anatol Sommer","email":"anatol@anatol.at"},{"name":"AJ ONeal","email":"aj@daplie.com","url":"https://daplie.com/"}],"gitHead":"764c6149407d413bffc704ea98f03e4787676118","_id":"le-acme-core@2.0.5","_shasum":"f71872a383d65a39b66a1a3412608473d226beda","_from":".","_npmVersion":"3.10.3","_nodeVersion":"6.3.0","_npmUser":{"name":"coolaj86","email":"coolaj86@gmail.com"},"maintainers":[{"name":"coolaj86","email":"coolaj86@gmail.com"}],"dist":{"shasum":"f71872a383d65a39b66a1a3412608473d226beda","tarball":"https://registry.npmjs.org/le-acme-core/-/le-acme-core-2.0.5.tgz"},"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/le-acme-core-2.0.5.tgz_1470772936914_0.9435560191050172"}},"2.0.6":{"name":"le-acme-core","version":"2.0.6","description":"A framework for building letsencrypt clients, forked from letiny","main":"node.js","browser":"browser.js","directories":{"example":"example","test":"test"},"scripts":{"test":"node example/letsencrypt.js"},"repository":{"type":"git","url":"git+https://github.com/Daplie/le-acme-core.git"},"license":"MPL-2.0","bugs":{"url":"https://github.com/Daplie/le-acme-core/issues"},"homepage":"https://github.com/Daplie/le-acme-core#readme","keywords":["le-acme","le-acme-","tiny","acme","letsencrypt","client","pem","jwk","pfx"],"dependencies":{"request":"^2.55.0","rsa-compat":"^1.2.4"},"contributors":[{"name":"ISRG"},{"name":"Anatol Sommer","email":"anatol@anatol.at"},{"name":"AJ ONeal","email":"aj@daplie.com","url":"https://daplie.com/"}],"gitHead":"528cec03a8233c23a84acf7e2f1a9b64ef0ca349","_id":"le-acme-core@2.0.6","_shasum":"8e60305a6acaf42d0cc2ffa5b6dcc2b583c3bcf6","_from":".","_npmVersion":"3.10.3","_nodeVersion":"6.3.0","_npmUser":{"name":"coolaj86","email":"coolaj86@gmail.com"},"maintainers":[{"name":"coolaj86","email":"coolaj86@gmail.com"}],"dist":{"shasum":"8e60305a6acaf42d0cc2ffa5b6dcc2b583c3bcf6","tarball":"https://registry.npmjs.org/le-acme-core/-/le-acme-core-2.0.6.tgz"},"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/le-acme-core-2.0.6.tgz_1470926501189_0.2278108240570873"}},"2.0.7":{"name":"le-acme-core","version":"2.0.7","description":"A framework for building letsencrypt clients, forked from letiny","main":"node.js","browser":"browser.js","directories":{"example":"example","test":"test"},"scripts":{"test":"node example/letsencrypt.js"},"repository":{"type":"git","url":"git+https://github.com/Daplie/le-acme-core.git"},"license":"MPL-2.0","bugs":{"url":"https://github.com/Daplie/le-acme-core/issues"},"homepage":"https://github.com/Daplie/le-acme-core#readme","keywords":["le-acme","le-acme-","tiny","acme","letsencrypt","client","pem","jwk","pfx"],"dependencies":{"request":"^2.74.0","rsa-compat":"^1.2.7"},"contributors":[{"name":"ISRG"},{"name":"Anatol Sommer","email":"anatol@anatol.at"},{"name":"AJ ONeal","email":"aj@daplie.com","url":"https://daplie.com/"}],"gitHead":"8436b615cbccc313ec48b004fb0b9f0f494a69a6","_id":"le-acme-core@2.0.7","_shasum":"c6d538888db0114fa2daef1a4ed40a290cac7cff","_from":".","_npmVersion":"3.10.3","_nodeVersion":"6.3.0","_npmUser":{"name":"coolaj86","email":"coolaj86@gmail.com"},"maintainers":[{"name":"coolaj86","email":"coolaj86@gmail.com"}],"dist":{"shasum":"c6d538888db0114fa2daef1a4ed40a290cac7cff","tarball":"https://registry.npmjs.org/le-acme-core/-/le-acme-core-2.0.7.tgz"},"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/le-acme-core-2.0.7.tgz_1472829759566_0.9623776371590793"}},"2.0.8":{"name":"le-acme-core","version":"2.0.8","description":"A framework for building letsencrypt clients, forked from letiny","main":"node.js","browser":"browser.js","directories":{"example":"example","test":"test"},"scripts":{"test":"node example/letsencrypt.js"},"repository":{"type":"git","url":"git+https://github.com/Daplie/le-acme-core.git"},"license":"MPL-2.0","bugs":{"url":"https://github.com/Daplie/le-acme-core/issues"},"homepage":"https://github.com/Daplie/le-acme-core#readme","keywords":["le-acme","le-acme-","tiny","acme","letsencrypt","client","pem","jwk","pfx"],"dependencies":{"request":"^2.74.0","rsa-compat":"^1.2.7"},"contributors":[{"name":"ISRG"},{"name":"Anatol Sommer","email":"anatol@anatol.at"},{"name":"AJ ONeal","email":"aj@daplie.com","url":"https://daplie.com/"}],"gitHead":"f63070ce54c3b7e2216952c8b46b92e2a5e803c6","_id":"le-acme-core@2.0.8","_shasum":"674bcc52534fb64a71b3478dd8f4043e079f8a3a","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"drewwarrentiy","email":"drewwarrentiy@gmail.com"},"dist":{"shasum":"674bcc52534fb64a71b3478dd8f4043e079f8a3a","tarball":"https://registry.npmjs.org/le-acme-core/-/le-acme-core-2.0.8.tgz"},"maintainers":[{"name":"coolaj86","email":"coolaj86@gmail.com"},{"name":"drewwarrentiy","email":"drewwarrentiy@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/le-acme-core-2.0.8.tgz_1484683529111_0.30837998166680336"}},"2.0.9":{"name":"le-acme-core","version":"2.0.9","description":"A framework for building letsencrypt clients, forked from letiny","main":"node.js","browser":"browser.js","directories":{"example":"example","test":"test"},"scripts":{"test":"node example/letsencrypt.js"},"repository":{"type":"git","url":"git+https://git.daplie.com/Daplie/le-acme-core.git"},"license":"MPL-2.0","bugs":{"url":"https://git.daplie.com/Daplie/le-acme-core/issues"},"homepage":"https://git.daplie.com/Daplie/le-acme-core#readme","keywords":["le-acme","le-acme-","tiny","acme","letsencrypt","client","pem","jwk","pfx"],"dependencies":{"request":"^2.74.0","rsa-compat":"^1.2.7"},"contributors":[{"name":"ISRG"},{"name":"Anatol Sommer","email":"anatol@anatol.at"},{"name":"AJ ONeal","email":"aj@daplie.com","url":"https://daplie.com/"}],"gitHead":"72646ced80c480c0ae428932ef6e017f9db82199","_id":"le-acme-core@2.0.9","_shasum":"6f90042c34cf67474d136618912e576907f77914","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"drewwarrentiy","email":"drewwarrentiy@gmail.com"},"dist":{"shasum":"6f90042c34cf67474d136618912e576907f77914","tarball":"https://registry.npmjs.org/le-acme-core/-/le-acme-core-2.0.9.tgz"},"maintainers":[{"name":"coolaj86","email":"coolaj86@gmail.com"},{"name":"drewwarrentiy","email":"drewwarrentiy@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/le-acme-core-2.0.9.tgz_1484686261876_0.638753917068243"}},"2.1.0":{"name":"le-acme-core","version":"2.1.0","description":"A framework for building letsencrypt clients, forked from letiny","main":"node.js","browser":"browser.js","directories":{"example":"example","test":"test"},"repository":{"type":"git","url":"git+https://git.daplie.com/Daplie/le-acme-core.git"},"license":"MPL-2.0","bugs":{"url":"https://git.daplie.com/Daplie/le-acme-core/issues"},"homepage":"https://git.daplie.com/Daplie/le-acme-core#readme","keywords":["le-acme","le-acme-","tiny","acme","letsencrypt","client","pem","jwk","pfx"],"dependencies":{"request":"^2.74.0","rsa-compat":"^1.2.7"},"devDependencies":{"better-assert":"^1.0.2","chai":"^3.5.0","chai-string":"^1.3.0","localhost.daplie.me-certificates":"^1.3.0","request-debug":"^0.2.0"},"contributors":[{"name":"ISRG"},{"name":"Anatol Sommer","email":"anatol@anatol.at"},{"name":"AJ ONeal","email":"aj@daplie.com","url":"https://daplie.com/"}],"gitHead":"51bcc1f20aaaccab5c6fc7716bc0b0f8e0fe7776","_id":"le-acme-core@2.1.0","scripts":{},"_shasum":"d5a7c1be8b269d3199bef6632dfa3e0624a16454","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.4","_npmUser":{"name":"tigerbot","email":"slgibelyou@gmail.com"},"dist":{"shasum":"d5a7c1be8b269d3199bef6632dfa3e0624a16454","tarball":"https://registry.npmjs.org/le-acme-core/-/le-acme-core-2.1.0.tgz"},"maintainers":[{"name":"coolaj86","email":"coolaj86@gmail.com"},{"name":"creationix","email":"tim@creationix.com"},{"name":"daplieinc","email":"npm@daplie.com"},{"name":"drewwarrentiy","email":"drewwarrentiy@gmail.com"},{"name":"insightfuls","email":"insightful_schmidt@yahoo.com.au"},{"name":"jimh","email":"jim.hager@daplie.com"},{"name":"tigerbot","email":"slgibelyou@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/le-acme-core-2.1.0.tgz_1493254341204_0.6068296125158668"}},"2.1.1":{"name":"le-acme-core","version":"2.1.1","description":"A framework for building letsencrypt clients, forked from letiny","main":"node.js","browser":"browser.js","directories":{"example":"example","test":"test"},"repository":{"type":"git","url":"git+https://git.daplie.com/Daplie/le-acme-core.git"},"license":"MPL-2.0","bugs":{"url":"https://git.daplie.com/Daplie/le-acme-core/issues"},"homepage":"https://git.daplie.com/Daplie/le-acme-core#readme","keywords":["le-acme","le-acme-","tiny","acme","letsencrypt","client","pem","jwk","pfx"],"dependencies":{"request":"^2.74.0","rsa-compat":"^1.2.7"},"devDependencies":{"better-assert":"^1.0.2","chai":"^3.5.0","chai-string":"^1.3.0","localhost.daplie.me-certificates":"^1.3.0","request-debug":"^0.2.0"},"contributors":[{"name":"ISRG"},{"name":"Anatol Sommer","email":"anatol@anatol.at"},{"name":"AJ ONeal","email":"aj@daplie.com","url":"https://daplie.com/"}],"gitHead":"9172d4c98ebad9e81fddcc381aa293a91b991f61","_id":"le-acme-core@2.1.1","_npmVersion":"5.0.3","_nodeVersion":"8.1.2","_npmUser":{"name":"creationix","email":"tim@creationix.com"},"dist":{"integrity":"sha512-dRW9W6R/rLeNsh70nEj7i7Xw+JH/6zG4SrWr8mEGh160Q3djGYJ9NKgnTgkBabb1CbXTcZGhhxx/DIx269JILw==","shasum":"82f1d0bc9e35002679891b9444e36a487971f12e","tarball":"https://registry.npmjs.org/le-acme-core/-/le-acme-core-2.1.1.tgz"},"maintainers":[{"name":"coolaj86","email":"coolaj86@gmail.com"},{"name":"creationix","email":"tim@creationix.com"},{"name":"daplieinc","email":"npm@daplie.com"},{"name":"drewwarrentiy","email":"drewwarrentiy@gmail.com"},{"name":"insightfuls","email":"insightful_schmidt@yahoo.com.au"},{"name":"jimh","email":"jim.hager@daplie.com"},{"name":"tigerbot","email":"slgibelyou@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/le-acme-core-2.1.1.tgz_1498672866627_0.9220643683802336"}}},"readme":"<!-- BANNER_TPL_BEGIN -->\n\nAbout Daplie: We're taking back the Internet!\n--------------\n\nDown with Google, Apple, and Facebook!\n\nWe're re-decentralizing the web and making it read-write again - one home cloud system at a time.\n\nTired of serving the Empire? Come join the Rebel Alliance:\n\n<a href=\"mailto:jobs@daplie.com\">jobs@daplie.com</a> | [Invest in Daplie on Wefunder](https://daplie.com/invest/) | [Pre-order Cloud](https://daplie.com/preorder/), The World's First Home Server for Everyone\n\n<!-- BANNER_TPL_END -->\n\n# le-acme-core\n\nLooking for **letiny-core**? Check the [v1.x branch](https://github.com/Daplie/le-acme-core/tree/v1.x).\n\n<!-- rename to le-acme-core -->\n\nA framework for building letsencrypt clients, forked from `letiny`.\n\nSupports all of:\n\n  * node with `ursa` (works fast)\n  * node with `forge` (works on windows)\n  * browser WebCrypto (not implemented, but... Let's Encrypt over WebRTC anyone?)\n  * any javascript implementation\n\n### These aren't the droids you're looking for\n\nThis is a library / framework for building letsencrypt clients.\nYou probably want one of these pre-built clients instead:\n\n  * [`letsencrypt`](https://github.com/Daplie/node-letsencrypt) (compatible with the official client)\n  * `letiny` (lightweight client cli)\n  * [`letsencrypt-express`](https://github.com/Daplie/letsencrypt-express) (automatic https for express)\n\n## Install & Usage:\n\n```bash\nnpm install --save le-acme-core\n```\n\nTo use the default dependencies:\n\n```javascript\n'use strict';\n\nvar ACME = require('le-acme-core').ACME.create();\n```\n\nFor **testing** and **development**, you can also inject the dependencies you want to use:\n\n```javascript\n'use strict';\n\nvar ACME = require('le-acme-core').ACME.create({\n, RSA: require('rsa-compat').RSA\n});\n\nACME.getAcmeUrls(discoveryUrl, function (err, urls) {\n  console.log(urls);\n});\n```\n\nYou will follow these steps to obtain certificates:\n\n* discover ACME registration urls with `getAcmeUrls`\n* register a user account with `registerNewAccount`\n* implement a method to agree to the terms of service as `agreeToTos`\n* get certificates with `getCertificate`\n* implement a method to store the challenge token as `setChallenge`\n* implement a method to get the challenge token as `getChallenge`\n* implement a method to remove the challenge token as `removeChallenge`\n\n### Demo\n\nYou can see this working for yourself, but you'll need to be on an internet connected computer with a domain.\n\nGet a temporary domain for testing\n\n```bash\nnpm install -g ddns-cli\nddns --random --email user@example.com --agree\n```\n\nNote: use **YOUR EMAIL** and accept the terms of service (run `ddns --help` to see them).\n\n<!-- TODO tutorial on ddns -->\n\nInstall le-acme-core and its dependencies. **Note**: it's okay if you're on windows\nand `ursa` fails to compile. It'll still work.\n\n```bash\ngit clone https://github.com/Daplie/le-acme-core.git ~/le-acme-core\npushd ~/le-acme-core\n\nnpm install\n```\n\nRun the demo:\n\n```bash\nnode examples/letsencrypt.js user@example.com example.com\n```\n\nNote: use **YOUR TEMPORARY DOMAIN** and **YOUR EMAIL**.\n\n## API\n\nThe Goodies\n\n```javascript\n// Accounts\nACME.registerNewAccount(options, cb)        // returns \"regr\" registration data\n\n    { newRegUrl: '<url>'                      //    no defaults, specify acmeUrls.newAuthz\n    , email: '<email>'                        //    valid email (server checks MX records)\n    , accountKeypair: {                       //    privateKeyPem or privateKeyJwt\n        privateKeyPem: '<ASCII PEM>'\n      }\n    , agreeToTerms: fn (tosUrl, cb) {}        //    must specify agree=tosUrl to continue (or falsey to end)\n    }\n\n// Registration\nACME.getCertificate(options, cb)            // returns (err, pems={ privkey (key), cert, chain (ca) })\n\n    { newAuthzUrl: '<url>'                    //    specify acmeUrls.newAuthz\n    , newCertUrl: '<url>'                     //    specify acmeUrls.newCert\n\n    , domainKeypair: {\n        privateKeyPem: '<ASCII PEM>'\n      }\n    , accountKeypair: {\n        privateKeyPem: '<ASCII PEM>'\n      }\n    , domains: ['example.com']\n\n    , setChallenge: fn (hostname, key, val, cb)\n    , removeChallenge: fn (hostname, key, cb)\n    }\n\n// Discovery URLs\nACME.getAcmeUrls(acmeDiscoveryUrl, cb)      // returns (err, acmeUrls={newReg,newAuthz,newCert,revokeCert})\n```\n\nHelpers & Stuff\n\n```javascript\n// Constants\nACME.productionServerUrl                // https://acme-v01.api.letsencrypt.org/directory\nACME.stagingServerUrl                   // https://acme-staging.api.letsencrypt.org/directory\nACME.acmeChallengePrefix                // /.well-known/acme-challenge/\nACME.knownEndpoints                     // new-authz, new-cert, new-reg, revoke-cert\n\n\n// HTTP Client Helpers\nACME.Acme                               // Signs requests with JWK\n    acme = new Acme(keypair)                // 'keypair' is an object with `privateKeyPem` and/or `privateKeyJwk`\n    acme.post(url, body, cb)                // POST with signature\n    acme.parseLinks(link)                   // (internal) parses 'link' header\n    acme.getNonce(url, cb)                  // (internal) HEAD request to get 'replay-nonce' strings\n```\n\n## Example\n\nBelow you'll find a stripped-down example. You can see the full example in the example folder.\n\n* [example/](https://github.com/Daplie/le-acme-core/blob/master/example/)\n\n#### Register Account & Domain\n\nThis is how you **register an ACME account** and **get an HTTPS certificate**\n\n```javascript\n'use strict';\n\nvar ACME = require('le-acme-core').ACME.create();\nvar RSA = require('rsa-compat').RSA;\n\nvar email = 'user@example.com';                   // CHANGE TO YOUR EMAIL\nvar domains = 'example.com';                      // CHANGE TO YOUR DOMAIN\nvar acmeDiscoveryUrl = ACME.stagingServerUrl;   // CHANGE to production, when ready\n\nvar accountKeypair = null;                        // { privateKeyPem: null, privateKeyJwk: null };\nvar domainKeypair = null;                         // same as above\nvar acmeUrls = null;\n\nRSA.generateKeypair(2048, 65537, function (err, keypair) {\n    accountKeypair = keypair;\n    // ...\n    ACME.getAcmeUrls(acmeDiscoveryUrl, function (err, urls) {\n        // ...\n        runDemo();\n    });\n});\n\nfunction runDemo() {\n    ACME.registerNewAccount(\n        { newRegUrl: acmeUrls.newReg\n        , email: email\n        , accountKeypair: accountKeypair\n        , agreeToTerms: function (tosUrl, done) {\n\n              // agree to the exact version of these terms\n              done(null, tosUrl);\n          }\n        }\n      , function (err, regr) {\n\n            ACME.getCertificate(\n                { newAuthzUrl: acmeUrls.newAuthz\n                , newCertUrl: acmeUrls.newCert\n\n                , domainKeypair: domainKeypair\n                , accountKeypair: accountKeypair\n                , domains: domains\n\n                , setChallenge: challengeStore.set\n                , removeChallenge: challengeStore.remove\n                }\n              , function (err, certs) {\n\n                  // Note: you should save certs to disk (or db)\n                  certStore.set(domains[0], certs, function () {\n\n                      // ...\n\n                  });\n\n                }\n            );\n        }\n    );\n}\n```\n\n**But wait**, there's more!\nSee [example/letsencrypt.js](https://github.com/Daplie/le-acme-core/blob/master/example/letsencrypt.js)\n\n#### Run a Server on 80, 443, and 5001 (https/tls)\n\nThat will fail unless you have a webserver running on 80 and 443 (or 5001)\nto respond to `/.well-known/acme-challenge/xxxxxxxx` with the proper token\n\n```javascript\nvar https = require('https');\nvar http = require('http');\n\n\nvar LeCore = deps.LeCore;\nvar tlsOptions = deps.tlsOptions;\nvar challengeStore = deps.challengeStore;\nvar certStore = deps.certStore;\n\n\n//\n// Challenge Handler\n//\nfunction acmeResponder(req, res) {\n  if (0 !== req.url.indexOf(LeCore.acmeChallengePrefix)) {\n    res.end('Hello World!');\n    return;\n  }\n\n  var key = req.url.slice(LeCore.acmeChallengePrefix.length);\n\n  challengeStore.get(req.hostname, key, function (err, val) {\n    res.end(val || 'Error');\n  });\n}\n\n\n//\n// Server\n//\nhttps.createServer(tlsOptions, acmeResponder).listen(5001, function () {\n  console.log('Listening https on', this.address());\n});\nhttp.createServer(acmeResponder).listen(80, function () {\n  console.log('Listening http on', this.address());\n});\n```\n\n**But wait**, there's more!\nSee [example/serve.js](https://github.com/Daplie/le-acme-core/blob/master/example/serve.js)\n\n#### Put some storage in place\n\nFinally, you need an implementation of `challengeStore`:\n\n```javascript\nvar challengeCache = {};\nvar challengeStore = {\n  set: function (hostname, key, value, cb) {\n    challengeCache[key] = value;\n    cb(null);\n  }\n, get: function (hostname, key, cb) {\n    cb(null, challengeCache[key]);\n  }\n, remove: function (hostname, key, cb) {\n    delete challengeCache[key];\n    cb(null);\n  }\n};\n\nvar certCache = {};\nvar certStore = {\n  set: function (hostname, certs, cb) {\n    certCache[hostname] = certs;\n    cb(null);\n  }\n, get: function (hostname, cb) {\n    cb(null, certCache[hostname]);\n  }\n, remove: function (hostname, cb) {\n    delete certCache[hostname];\n    cb(null);\n  }\n};\n```\n\n**But wait**, there's more!\nSee\n\n* [example/challenge-store.js](https://github.com/Daplie/le-acme-core/blob/master/challenge-store.js)\n* [example/cert-store.js](https://github.com/Daplie/le-acme-core/blob/master/cert-store.js)\n\n## Authors\n\n  * ISRG\n  * Anatol Sommer  (https://github.com/anatolsommer)\n  * AJ ONeal <aj@daplie.com> (https://daplie.com)\n\n## Licence\n\nMPL 2.0\n\nAll of the code is available under the MPL-2.0.\n\nSome of the files are original work not modified from `letiny`\nand are made available under MIT and Apache-2.0 as well (check file headers).\n","maintainers":[{"name":"coolaj86","email":"coolaj86@gmail.com"},{"name":"creationix","email":"tim@creationix.com"},{"name":"daplieinc","email":"npm@daplie.com"},{"name":"drewwarrentiy","email":"drewwarrentiy@gmail.com"},{"name":"insightfuls","email":"insightful_schmidt@yahoo.com.au"},{"name":"jimh","email":"jim.hager@daplie.com"},{"name":"tigerbot","email":"slgibelyou@gmail.com"}],"time":{"modified":"2017-06-28T18:01:07.798Z","created":"2016-08-09T20:02:19.712Z","2.0.5":"2016-08-09T20:02:19.712Z","2.0.6":"2016-08-11T14:41:42.415Z","2.0.7":"2016-09-02T15:22:42.000Z","2.0.8":"2017-01-17T20:05:31.131Z","2.0.9":"2017-01-17T20:51:02.099Z","2.1.0":"2017-04-27T00:52:21.473Z","2.1.1":"2017-06-28T18:01:07.798Z"},"homepage":"https://git.daplie.com/Daplie/le-acme-core#readme","keywords":["le-acme","le-acme-","tiny","acme","letsencrypt","client","pem","jwk","pfx"],"repository":{"type":"git","url":"git+https://git.daplie.com/Daplie/le-acme-core.git"},"contributors":[{"name":"ISRG"},{"name":"Anatol Sommer","email":"anatol@anatol.at"},{"name":"AJ ONeal","email":"aj@daplie.com","url":"https://daplie.com/"}],"bugs":{"url":"https://git.daplie.com/Daplie/le-acme-core/issues"},"license":"MPL-2.0","readmeFilename":"README.md","_attachments":{},"_etag":"W/\"5953eee3-5787\"","_lastModified":"Wed, 28 Jun 2017 18:01:07 GMT","_cached":true}