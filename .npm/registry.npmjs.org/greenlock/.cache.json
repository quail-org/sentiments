{"_id":"greenlock","_rev":"18-555c53de146627fcd0b38075876f43bf","name":"greenlock","description":"Let's Encrypt for node.js on npm","dist-tags":{"latest":"2.1.16"},"versions":{"2.1.9":{"name":"greenlock","version":"2.1.9","description":"Let's Encrypt for node.js on npm","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git+https://git.daplie.com/Daplie/node-greenlock.git"},"keywords":["greenlock","letsencrypt","letsencrypt.org","le","Let's Encrypt","lejs","le.js","acme","node","nodejs","node.js","client"],"author":{"name":"AJ ONeal","email":"coolaj86@gmail.com","url":"https://coolaj86.com/"},"license":"(MIT OR Apache-2.0)","bugs":{"url":"https://git.daplie.com/Daplie/node-greenlock/issues"},"homepage":"https://git.daplie.com/Daplie/node-greenlock#readme","devDependencies":{"request":"^2.75.0"},"optionalDependencies":{},"dependencies":{"asn1js":"^1.2.12","bluebird":"^3.0.6","certpem":"^1.0.0","homedir":"^0.6.0","le-acme-core":"^2.0.5","le-challenge-fs":"^2.0.2","le-challenge-sni":"^2.0.0","le-sni-auto":"^2.1.0","le-store-certbot":"^2.0.3","localhost.daplie.com-certificates":"^1.2.3","node.extend":"^1.1.5","pkijs":"^1.3.27","rsa-compat":"^1.2.1"},"gitHead":"f02104b44fb22ff3beb924b1036c9fc303fb073d","_id":"greenlock@2.1.9","_shasum":"ac4d9c1d3430e119a79f93cb25b6136c93422a9a","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"drewwarrentiy","email":"drewwarrentiy@gmail.com"},"dist":{"shasum":"ac4d9c1d3430e119a79f93cb25b6136c93422a9a","tarball":"https://registry.npmjs.org/greenlock/-/greenlock-2.1.9.tgz"},"maintainers":[{"name":"drewwarrentiy","email":"drewwarrentiy@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/greenlock-2.1.9.tgz_1484698914300_0.25829229853115976"},"directories":{}},"2.1.10":{"name":"greenlock","version":"2.1.10","description":"Let's Encrypt for node.js on npm","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git+https://git.daplie.com/Daplie/node-greenlock.git"},"keywords":["greenlock","letsencrypt","letsencrypt.org","le","Let's Encrypt","lejs","le.js","acme","node","nodejs","node.js","client"],"author":{"name":"AJ ONeal","email":"coolaj86@gmail.com","url":"https://coolaj86.com/"},"license":"(MIT OR Apache-2.0)","bugs":{"url":"https://git.daplie.com/Daplie/node-greenlock/issues"},"homepage":"https://git.daplie.com/Daplie/node-greenlock#readme","devDependencies":{"request":"^2.75.0"},"optionalDependencies":{},"dependencies":{"asn1js":"^1.2.12","bluebird":"^3.0.6","certpem":"^1.0.0","homedir":"^0.6.0","le-acme-core":"^2.0.5","le-challenge-fs":"^2.0.2","le-challenge-sni":"^2.0.0","le-sni-auto":"^2.1.0","le-store-certbot":"^2.0.3","localhost.daplie.com-certificates":"^1.2.3","node.extend":"^1.1.5","pkijs":"^1.3.27","rsa-compat":"^1.2.1"},"gitHead":"f2a0e96fb94fc1c8e8f5c41a971da734512ee1ac","_id":"greenlock@2.1.10","_shasum":"4a7f07319f83f17907778675992580626dbd3476","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"drewwarrentiy","email":"drewwarrentiy@gmail.com"},"dist":{"shasum":"4a7f07319f83f17907778675992580626dbd3476","tarball":"https://registry.npmjs.org/greenlock/-/greenlock-2.1.10.tgz"},"maintainers":[{"name":"coolaj86","email":"coolaj86@gmail.com"},{"name":"drewwarrentiy","email":"drewwarrentiy@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/greenlock-2.1.10.tgz_1485378981655_0.20083263283595443"},"directories":{}},"2.1.11":{"name":"greenlock","version":"2.1.11","description":"Let's Encrypt for node.js on npm","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git+https://git.daplie.com/Daplie/node-greenlock.git"},"keywords":["greenlock","letsencrypt","letsencrypt.org","le","Let's Encrypt","lejs","le.js","acme","node","nodejs","node.js","client"],"author":{"name":"AJ ONeal","email":"coolaj86@gmail.com","url":"https://coolaj86.com/"},"license":"(MIT OR Apache-2.0)","bugs":{"url":"https://git.daplie.com/Daplie/node-greenlock/issues"},"homepage":"https://git.daplie.com/Daplie/node-greenlock#readme","devDependencies":{"request":"^2.75.0"},"optionalDependencies":{},"dependencies":{"asn1js":"^1.2.12","bluebird":"^3.0.6","certpem":"^1.0.0","homedir":"^0.6.0","le-acme-core":"^2.0.5","le-challenge-fs":"^2.0.2","le-challenge-sni":"^2.0.0","le-sni-auto":"^2.1.0","le-store-certbot":"^2.0.3","localhost.daplie.com-certificates":"^1.2.3","node.extend":"^1.1.5","pkijs":"^1.3.27","rsa-compat":"^1.2.1"},"gitHead":"9c7af3a463c5787fe4a00f0c7fba750024167e53","_id":"greenlock@2.1.11","_shasum":"14cc0647b72abb81cadc4aa13bb2e2637d08a15c","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"drewwarrentiy","email":"drewwarrentiy@gmail.com"},"dist":{"shasum":"14cc0647b72abb81cadc4aa13bb2e2637d08a15c","tarball":"https://registry.npmjs.org/greenlock/-/greenlock-2.1.11.tgz"},"maintainers":[{"name":"coolaj86","email":"coolaj86@gmail.com"},{"name":"drewwarrentiy","email":"drewwarrentiy@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/greenlock-2.1.11.tgz_1485379978370_0.6198494699783623"},"directories":{}},"2.1.12":{"name":"greenlock","version":"2.1.12","description":"Let's Encrypt for node.js on npm","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"https://git.daplie.com/Daplie/node-greenlock"},"keywords":["greenlock","letsencrypt","letsencrypt.org","le","Let's Encrypt","lejs","le.js","acme","node","nodejs","node.js","client"],"author":{"name":"AJ ONeal","email":"coolaj86@gmail.com","url":"https://coolaj86.com/"},"license":"(MIT OR Apache-2.0)","bugs":{"url":"https://git.daplie.com/Daplie/node-greenlock/issues"},"homepage":"https://git.daplie.com/Daplie/node-greenlock#readme","devDependencies":{"request":"^2.75.0"},"optionalDependencies":{},"dependencies":{"asn1js":"^1.2.12","bluebird":"^3.0.6","certpem":"^1.0.0","homedir":"^0.6.0","le-acme-core":"^2.0.5","le-challenge-fs":"^2.0.2","le-challenge-sni":"^2.0.0","le-sni-auto":"^2.1.0","le-store-certbot":"^2.0.3","localhost.daplie.com-certificates":"^1.2.3","node.extend":"^1.1.5","pkijs":"^1.3.27","rsa-compat":"^1.2.1"},"gitHead":"27e34e02a820c1de652200d0e1c1252af9cb2fa3","_id":"greenlock@2.1.12","_shasum":"ebeced4e5d40392b0f2ce2684104e681ad7b1e27","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"drewwarrentiy","email":"drewwarrentiy@gmail.com"},"dist":{"shasum":"ebeced4e5d40392b0f2ce2684104e681ad7b1e27","tarball":"https://registry.npmjs.org/greenlock/-/greenlock-2.1.12.tgz"},"maintainers":[{"name":"coolaj86","email":"coolaj86@gmail.com"},{"name":"drewwarrentiy","email":"drewwarrentiy@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/greenlock-2.1.12.tgz_1485966006091_0.12508902442641556"},"directories":{}},"2.1.13":{"name":"greenlock","version":"2.1.13","description":"Let's Encrypt for node.js on npm","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"https://git.daplie.com/Daplie/node-greenlock"},"keywords":["greenlock","letsencrypt","letsencrypt.org","le","Let's Encrypt","lejs","le.js","acme","node","nodejs","node.js","client"],"author":{"name":"AJ ONeal","email":"coolaj86@gmail.com","url":"https://coolaj86.com/"},"license":"(MIT OR Apache-2.0)","bugs":{"url":"https://git.daplie.com/Daplie/node-greenlock/issues"},"homepage":"https://git.daplie.com/Daplie/node-greenlock#readme","devDependencies":{"request":"^2.75.0"},"optionalDependencies":{},"dependencies":{"asn1js":"^1.2.12","bluebird":"^3.0.6","certpem":"^1.0.0","homedir":"^0.6.0","le-acme-core":"^2.0.5","le-challenge-fs":"^2.0.2","le-challenge-sni":"^2.0.0","le-sni-auto":"^2.1.0","le-store-certbot":"^2.0.3","localhost.daplie.me-certificates":"^1.3.0","node.extend":"^1.1.5","pkijs":"^1.3.27","rsa-compat":"^1.2.1"},"gitHead":"9998948332d2aea0f48d7cafd37b2c08847b460d","_id":"greenlock@2.1.13","_shasum":"022b676162cd3b8a2faf8c2e9c98b41b11504313","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.4","_npmUser":{"name":"tigerbot","email":"slgibelyou@gmail.com"},"dist":{"shasum":"022b676162cd3b8a2faf8c2e9c98b41b11504313","tarball":"https://registry.npmjs.org/greenlock/-/greenlock-2.1.13.tgz"},"maintainers":[{"name":"coolaj86","email":"coolaj86@gmail.com"},{"name":"daplieinc","email":"npm@daplie.com"},{"name":"drewwarrentiy","email":"drewwarrentiy@gmail.com"},{"name":"tigerbot","email":"slgibelyou@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/greenlock-2.1.13.tgz_1491857015677_0.7669221742544323"},"directories":{}},"2.1.14":{"name":"greenlock","version":"2.1.14","description":"Let's Encrypt for node.js on npm","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git+https://git.daplie.com/Daplie/node-greenlock.git"},"keywords":["greenlock","letsencrypt","letsencrypt.org","le","Let's Encrypt","lejs","le.js","acme","node","nodejs","node.js","client"],"author":{"name":"AJ ONeal","email":"coolaj86@gmail.com","url":"https://coolaj86.com/"},"license":"(MIT OR Apache-2.0)","bugs":{"url":"https://git.daplie.com/Daplie/node-greenlock/issues"},"homepage":"https://git.daplie.com/Daplie/node-greenlock#readme","devDependencies":{"request":"^2.75.0"},"optionalDependencies":{},"dependencies":{"asn1js":"^1.2.12","bluebird":"^3.0.6","certpem":"^1.0.0","homedir":"^0.6.0","le-acme-core":"^2.0.5","le-challenge-fs":"^2.0.2","le-challenge-sni":"^2.0.0","le-sni-auto":"^2.1.0","le-store-certbot":"^2.0.3","localhost.daplie.me-certificates":"^1.3.0","node.extend":"^1.1.5","pkijs":"^1.3.27","rsa-compat":"^1.2.1"},"gitHead":"5b14f2a1f15a9dfdad708d35e897704e957e0a47","_id":"greenlock@2.1.14","_shasum":"f7793435ffa8955368852fbf79137ad34ebf56c5","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"drewwarrentiy","email":"drewwarrentiy@gmail.com"},"dist":{"shasum":"f7793435ffa8955368852fbf79137ad34ebf56c5","tarball":"https://registry.npmjs.org/greenlock/-/greenlock-2.1.14.tgz"},"maintainers":[{"name":"coolaj86","email":"coolaj86@gmail.com"},{"name":"creationix","email":"tim@creationix.com"},{"name":"daplieinc","email":"npm@daplie.com"},{"name":"drewwarrentiy","email":"drewwarrentiy@gmail.com"},{"name":"jimh","email":"jim.hager@daplie.com"},{"name":"tigerbot","email":"slgibelyou@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/greenlock-2.1.14.tgz_1492191300195_0.26420269161462784"},"directories":{}},"2.1.15":{"name":"greenlock","version":"2.1.15","description":"Let's Encrypt for node.js on npm","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git+https://git.daplie.com/Daplie/node-greenlock.git"},"keywords":["greenlock","letsencrypt","letsencrypt.org","le","Let's Encrypt","lejs","le.js","acme","node","nodejs","node.js","client"],"author":{"name":"AJ ONeal","email":"coolaj86@gmail.com","url":"https://coolaj86.com/"},"license":"(MIT OR Apache-2.0)","bugs":{"url":"https://git.daplie.com/Daplie/node-greenlock/issues"},"homepage":"https://git.daplie.com/Daplie/node-greenlock#readme","devDependencies":{"request":"^2.75.0"},"optionalDependencies":{},"dependencies":{"asn1js":"^1.2.12","bluebird":"^3.0.6","certpem":"^1.0.0","homedir":"^0.6.0","le-acme-core":"^2.0.5","le-challenge-fs":"^2.0.2","le-challenge-sni":"^2.0.0","le-sni-auto":"^2.1.0","le-store-certbot":"^2.0.3","localhost.daplie.me-certificates":"^1.3.0","node.extend":"^1.1.5","pkijs":"^1.3.27","rsa-compat":"^1.2.1"},"gitHead":"3c5e01b4d4e3c854b235f453d6c13fa99da6c441","_id":"greenlock@2.1.15","_shasum":"d920672c290cd917fe23eda707102e8ce5c71022","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.4","_npmUser":{"name":"coolaj86","email":"coolaj86@gmail.com"},"dist":{"shasum":"d920672c290cd917fe23eda707102e8ce5c71022","tarball":"https://registry.npmjs.org/greenlock/-/greenlock-2.1.15.tgz"},"maintainers":[{"name":"coolaj86","email":"coolaj86@gmail.com"},{"name":"drewwarrentiy","email":"drewwarrentiy@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/greenlock-2.1.15.tgz_1494061626554_0.17063859361223876"},"directories":{}},"2.1.16":{"name":"greenlock","version":"2.1.16","description":"Let's Encrypt for node.js on npm","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git+https://git.daplie.com/Daplie/node-greenlock.git"},"keywords":["greenlock","letsencrypt","letsencrypt.org","le","Let's Encrypt","lejs","le.js","acme","node","nodejs","node.js","client"],"author":{"name":"AJ ONeal","email":"coolaj86@gmail.com","url":"https://coolaj86.com/"},"license":"(MIT OR Apache-2.0)","bugs":{"url":"https://git.daplie.com/Daplie/node-greenlock/issues"},"homepage":"https://git.daplie.com/Daplie/node-greenlock#readme","devDependencies":{"request":"^2.75.0"},"optionalDependencies":{},"dependencies":{"asn1js":"^1.2.12","bluebird":"^3.0.6","certpem":"^1.0.0","homedir":"^0.6.0","le-acme-core":"^2.0.5","le-challenge-fs":"^2.0.2","le-challenge-sni":"^2.0.0","le-sni-auto":"^2.1.0","le-store-certbot":"^2.0.3","localhost.daplie.me-certificates":"^1.3.0","node.extend":"^1.1.5","pkijs":"^1.3.27","rsa-compat":"^1.2.1"},"gitHead":"0096a59894af156b6bf67bc9b0d496be256b12e5","_id":"greenlock@2.1.16","_shasum":"8443377f801f2ec2b7f4715ae076074979f21ea4","_from":".","_npmVersion":"3.10.10","_nodeVersion":"7.10.0","_npmUser":{"name":"insightfuls","email":"insightful_schmidt@yahoo.com.au"},"dist":{"shasum":"8443377f801f2ec2b7f4715ae076074979f21ea4","tarball":"https://registry.npmjs.org/greenlock/-/greenlock-2.1.16.tgz"},"maintainers":[{"email":"insightful_schmidt@yahoo.com.au","name":"insightfuls"},{"email":"coolaj86@gmail.com","name":"coolaj86"},{"email":"drewwarrentiy@gmail.com","name":"drewwarrentiy"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/greenlock-2.1.16.tgz_1504046375842_0.7434267930220813"},"directories":{}}},"readme":"<!-- BANNER_TPL_BEGIN -->\n\nAbout Daplie: We're taking back the Internet!\n--------------\n\nDown with Google, Apple, and Facebook!\n\nWe're re-decentralizing the web and making it read-write again - one home cloud system at a time.\n\nTired of serving the Empire? Come join the Rebel Alliance:\n\n<a href=\"mailto:jobs@daplie.com\">jobs@daplie.com</a> | [Invest in Daplie on Wefunder](https://daplie.com/invest/) | [Pre-order Cloud](https://daplie.com/preorder/), The World's First Home Server for Everyone\n\n<!-- BANNER_TPL_END -->\n\ngreenlock (node-letsencrypt) \n=========\n\n[![Join the chat at https://gitter.im/Daplie/letsencrypt-express](https://badges.gitter.im/Daplie/letsencrypt-express.svg)](https://gitter.im/Daplie/letsencrypt-express?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n| **greenlock**\n| [greenlock-cli](https://git.daplie.com/Daplie/greenlock-cli)\n| [greenlock-express](https://git.daplie.com/Daplie/greenlock-express)\n| [greenlock-cluster](https://git.daplie.com/Daplie/greenlock-cluster)\n| [greenlock-koa](https://git.daplie.com/Daplie/greenlock-koa)\n| [greenlock-hapi](https://git.daplie.com/Daplie/greenlock-hapi)\n|\n\nAutomatic [Let's Encrypt](https://letsencrypt.org) (ACME) HTTPS / TLS / SSL Certificates for node.js\n\nFree SSL with [90-day](https://letsencrypt.org/2015/11/09/why-90-days.html) HTTPS / TLS Certificates\n\nAre these the droids you're looking for?\n------\n\nThis is a **low-level library** for implementing ACME / LetsEncrypt Clients, CLIs,\nsystem tools, and abstracting storage backends (file vs db, etc).\n\nFor `express`, raw `https` or `spdy`, or `restify` (same as raw https) see\n[**greenlock-express** (previously letsencrypt-express)](https://git.daplie.com/Daplie/greenlock-express) and [greenlock-cluster (previously letsencrypt-cluster)](https://git.daplie.com/Daplie/greenlock-cluster).\n\nFor `hapi` see [greenlock-hapi (previously letsencrypt-hapi)](https://git.daplie.com/Daplie/greenlock-hapi).\n\nFor `koa` or `rill`\nsee [greenlock-koa (previously letsencrypt-koa)](https://git.daplie.com/Daplie/greenlock-koa).\n\nFor `bash`, `fish`, `zsh`, `cmd.exe`, `PowerShell`\nsee [**greenlock-cli** (previously letsencrypt-cli)](https://git.daplie.com/Daplie/greenlock-cli).\n\nInstall\n=======\n\n`greenlock` requires at least two plugins:\none for managing certificate storage and the other for handling ACME challenges.\n\nThe default storage plugin is [`le-store-certbot`](https://git.daplie.com/Daplie/le-store-certbot)\nand the default challenge is [`le-challenge-fs`](https://git.daplie.com/Daplie/le-challenge-fs).\n\n```bash\nnpm install --save greenlock@2.x\n\nnpm install --save le-store-certbot@2.x   # default plugin for accounts, certificates, and keypairs\nnpm install --save le-challenge-fs@2.x    # default plugin for http-01 challenge\nnpm install --save le-challenge-sni@2.x   # default plugin for tls-sni-01 and tls-sni-02 challenge\nnpm install --save le-acme-core@2.x       # default plugin for ACME spec\nnpm install --save le-sni-auto@2.x        # default plugin for SNICallback\n```\n\n**Important**: Use node v4.5+ or v6.x, node <= v4.4 has a [known bug](https://github.com/nodejs/node/issues/8053) in the `Buffer` implementation.\n\nUsage\n=====\n\nIt's very simple and easy to use, but also very complete and easy to extend and customize.\n\n### Overly Simplified Example\n\nAgainst my better judgement I'm providing a terribly oversimplified example\nof how to use this library:\n\n```javascript\nvar le = require('greenlock').create({ server: 'staging' });\n\nvar opts = {\n  domains: ['example.com'], email: 'user@email.com', agreeTos: true\n};\n\nle.register(opts).then(function (certs) {\n  console.log(certs);\n  // privkey, cert, chain, expiresAt, issuedAt, subject, altnames\n}, function (err) {\n  console.error(err);\n});\n```\n\nYou also need some sort of server to handle the acme challenge:\n\n```javascript\nvar app = express();\napp.use('/', le.middleware());\n```\n\nNote: The `webrootPath` string is a template.\nAny occurance of `:hostname` will be replaced\nwith the domain for which we are requested certificates.\n\n### Useful Example\n\nThe configuration consists of 3 components:\n\n* Storage Backend (search npm for projects starting with 'le-store-')\n* ACME Challenge Handlers (search npm for projects starting with 'le-challenge-')\n* Letsencryt Config (this is all you)\n\n```javascript\n'use strict';\n\nvar LE = require('greenlock');\nvar le;\n\n\n// Storage Backend\nvar leStore = require('le-store-certbot').create({\n  configDir: '~/acme/etc'                                 // or /etc/letsencrypt or wherever\n, debug: false\n});\n\n\n// ACME Challenge Handlers\nvar leHttpChallenge = require('le-challenge-fs').create({\n  webrootPath: '~/acme/var/'                              // or template string such as\n, debug: false                                            // '/srv/www/:hostname/.well-known/acme-challenge'\n});\nvar leSniChallenge = require('le-challenge-sni').create({\n, debug: false\n});\n\n\nfunction leAgree(opts, agreeCb) {\n  // opts = { email, domains, tosUrl }\n  agreeCb(null, opts.tosUrl);\n}\n\nle = LE.create({\n  server: LE.stagingServerUrl                             // or LE.productionServerUrl\n, store: leStore                                          // handles saving of config, accounts, and certificates\n, challenges: {\n    'http-01': leHttpChallenge                            // handles /.well-known/acme-challege keys and tokens\n  , 'tls-sni-01': leSniChallenge                          // handles generating a certificate with the correct name\n  , 'tls-sni-02': leSniChallenge\n  }\n, challengeType: 'http-01'                                // default to this challenge type\n, agreeToTerms: leAgree                                   // hook to allow user to view and accept LE TOS\n//, sni: require('le-sni-auto').create({})                // handles sni callback\n, debug: false\n//, log: function (debug) {console.log.apply(console, args);} // handles debug outputs\n});\n\n\n// If using express you should use the middleware\n// app.use('/', le.middleware());\n//\n// Otherwise you should see the test file for usage of this:\n// le.challenges['http-01'].get(opts.domain, key, val, done)\n\n\n\n// Check in-memory cache of certificates for the named domain\nle.check({ domains: [ 'example.com' ] }).then(function (results) {\n  if (results) {\n    // we already have certificates\n    return;\n  }\n\n\n  // Register Certificate manually\n  le.register({\n\n    domains: ['example.com']                                // CHANGE TO YOUR DOMAIN (list for SANS)\n  , email: 'user@email.com'                                 // CHANGE TO YOUR EMAIL\n  , agreeTos: ''                                            // set to tosUrl string (or true) to pre-approve (and skip agreeToTerms)\n  , rsaKeySize: 2048                                        // 2048 or higher\n  , challengeType: 'http-01'                                // http-01, tls-sni-01, or dns-01\n\n  }).then(function (results) {\n\n    console.log('success');\n\n  }, function (err) {\n\n    // Note: you must either use le.middleware() with express,\n    // manually use le.challenges['http-01'].get(opts, domain, key, val, done)\n    // or have a webserver running and responding\n    // to /.well-known/acme-challenge at `webrootPath`\n    console.error('[Error]: node-greenlock/examples/standalone');\n    console.error(err.stack);\n\n  });\n\n});\n```\n\nHere's what `results` looks like:\n\n```javascript\n{ privkey: ''     // PEM encoded private key\n, cert: ''        // PEM encoded cert\n, chain: ''       // PEM encoded intermediate cert\n, issuedAt: 0     // notBefore date (in ms) parsed from cert\n, expiresAt: 0    // notAfter date (in ms) parsed from cert\n, subject: ''     // example.com\n, altnames: []    // example.com,www.example.com\n}\n```\n\nAPI\n---\n\nThe full end-user API is exposed in the example above and includes all relevant options.\n\n```\nle.register(opts)\nle.check(opts)\n```\n\n### Helper Functions\n\nWe do expose a few helper functions:\n\n* LE.validDomain(hostname) // returns '' or the hostname string if it's a valid ascii or punycode domain name\n\nTODO fetch domain tld list\n\n### Template Strings\n\nThe following variables will be tempalted in any strings passed to the options object:\n\n* `~/` replaced with `os.homedir()` i.e. `/Users/aj`\n* `:hostname` replaced with the first domain in the list i.e. `example.com`\n\nDeveloper API\n-------------\n\nIf you are developing an `le-store-*` or `le-challenge-*` plugin you need to be aware of\nadditional internal API expectations.\n\n**IMPORTANT**:\n\nUse `v2.0.0` as your initial version - NOT v0.1.0 and NOT v1.0.0 and NOT v3.0.0.\nThis is to indicate that your module is compatible with v2.x of node-greenlock.\n\nSince the public API for your module is defined by node-greenlock the major version\nshould be kept in sync.\n\n### store implementation\n\nSee <https://git.daplie.com/Daplie/le-store-SPEC>\n\n* getOptions()\n* accounts.\n  * checkKeypair(opts, cb)\n  * check(opts, cb)\n  * setKeypair(opts, keypair, cb)\n  * set(opts, reg, cb)\n* certificates.\n  * checkKeypair(opts, cb)\n  * check(opts, cb)\n  * setKeypair(opts, keypair, cb)\n  * set(opts, reg, cb)\n\n### challenge implementation\n\nSee https://git.daplie.com/Daplie/le-challenge-fs\n\n* `.set(opts, domain, key, value, cb);`         // opts will be saved with domain/key\n* `.get(opts, domain, key, cb);`                // opts will be retrieved by domain/key\n* `.remove(opts, domain, key, cb);`             // opts will be retrieved by domain/key\n\nChange History\n==============\n\n* v2.1.9 - Jan 18th 2017 renamed to greenlock\n* v2.0.2 - Aug 9th 2016 update readme\n* v2.0.1 - Aug 9th 2016\n  * major refactor\n  * simplified API\n  * modular plugins\n  * knock out bugs\n* v1.5.0 now using letiny-core v2.0.0 and rsa-compat\n* v1.4.x I can't remember... but it's better!\n* v1.1.0 Added letiny-core, removed node-letsencrypt-python\n* v1.0.2 Works with node-letsencrypt-python\n* v1.0.0 Thar be dragons\n\nLICENSE\n=======\n\nDual-licensed MIT and Apache-2.0\n\nSee LICENSE\n","maintainers":[{"email":"insightful_schmidt@yahoo.com.au","name":"insightfuls"},{"email":"coolaj86@gmail.com","name":"coolaj86"},{"email":"drewwarrentiy@gmail.com","name":"drewwarrentiy"}],"time":{"modified":"2017-08-29T22:39:35.944Z","created":"2017-01-18T00:21:54.550Z","2.1.9":"2017-01-18T00:21:54.550Z","2.1.10":"2017-01-25T21:16:21.893Z","2.1.11":"2017-01-25T21:33:00.274Z","2.1.12":"2017-02-01T16:20:06.338Z","2.1.13":"2017-04-10T20:43:37.633Z","2.1.14":"2017-04-14T17:35:00.457Z","2.1.15":"2017-05-06T09:07:07.366Z","2.1.16":"2017-08-29T22:39:35.944Z"},"homepage":"https://git.daplie.com/Daplie/node-greenlock#readme","keywords":["greenlock","letsencrypt","letsencrypt.org","le","Let's Encrypt","lejs","le.js","acme","node","nodejs","node.js","client"],"repository":{"type":"git","url":"git+https://git.daplie.com/Daplie/node-greenlock.git"},"author":{"name":"AJ ONeal","email":"coolaj86@gmail.com","url":"https://coolaj86.com/"},"bugs":{"url":"https://git.daplie.com/Daplie/node-greenlock/issues"},"license":"(MIT OR Apache-2.0)","readmeFilename":"README.md","users":{"heineiuo":true,"novemberborn":true,"alek-s":true},"_attachments":{},"_etag":"W/\"59a5ed27-6436\"","_lastModified":"Tue, 29 Aug 2017 22:39:35 GMT","_cached":true}