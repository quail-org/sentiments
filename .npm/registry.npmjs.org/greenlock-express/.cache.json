{"_id":"greenlock-express","_rev":"12-abf738be88cdb1e1c62a8332d238d0f8","name":"greenlock-express","description":"Free SSL and managed or automatic HTTPS for node.js with Express, Koa, Connect, Hapi, and all other middleware systems.","dist-tags":{"latest":"2.0.11"},"versions":{"2.0.7":{"name":"greenlock-express","version":"2.0.7","description":"Free SSL and managed or automatic HTTPS for node.js with Express, Koa, Connect, Hapi, and all other middleware systems.","main":"lex.js","directories":{"example":"examples"},"dependencies":{"le-challenge-fs":"^2.0.4","le-sni-auto":"^2.0.1","le-store-certbot":"^2.0.3","greenlock":"^2.1.9","localhost.daplie.com-certificates":"^1.2.3","redirect-https":"^1.1.0"},"devDependencies":{},"scripts":{"test":"node examples/serve.js"},"repository":{"type":"git","url":"git+https://git.daplie.com/Daplie/greenlock-cluster.git"},"keywords":["acme","cloud","cluster","free","greenlock","https","le","letsencrypt","multi-core","node","node.js","scale","ssl","tls"],"author":{"name":"AJ ONeal","email":"aj@daplie.com","url":"https://daplie.com/"},"license":"(MIT OR Apache-2.0)","bugs":{"url":"https://git.daplie.com/Daplie/greenlock-cluster/issues"},"homepage":"https://git.daplie.com/Daplie/greenlock-cluster#readme","gitHead":"d4bc899f6d9088cec51161f23fa8556627fc4482","_id":"greenlock-express@2.0.7","_shasum":"29d1df2ec8142415f641b7d11481cde00c01b644","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"drewwarrentiy","email":"drewwarrentiy@gmail.com"},"dist":{"shasum":"29d1df2ec8142415f641b7d11481cde00c01b644","tarball":"https://registry.npmjs.org/greenlock-express/-/greenlock-express-2.0.7.tgz"},"maintainers":[{"name":"drewwarrentiy","email":"drewwarrentiy@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/greenlock-express-2.0.7.tgz_1484695684863_0.9672610710840672"}},"2.0.8":{"name":"greenlock-express","version":"2.0.8","description":"Free SSL and managed or automatic HTTPS for node.js with Express, Koa, Connect, Hapi, and all other middleware systems.","main":"lex.js","directories":{"example":"examples"},"dependencies":{"le-challenge-fs":"^2.0.4","le-sni-auto":"^2.0.1","le-store-certbot":"^2.0.3","greenlock":"^2.1.9","localhost.daplie.com-certificates":"^1.2.3","redirect-https":"^1.1.0"},"devDependencies":{},"scripts":{"test":"node examples/serve.js"},"repository":{"type":"git","url":"git+https://git.daplie.com/Daplie/greenlock-cluster.git"},"keywords":["acme","cloud","cluster","free","greenlock","https","le","letsencrypt","multi-core","node","node.js","scale","ssl","tls"],"author":{"name":"AJ ONeal","email":"aj@daplie.com","url":"https://daplie.com/"},"license":"(MIT OR Apache-2.0)","bugs":{"url":"https://git.daplie.com/Daplie/greenlock-cluster/issues"},"homepage":"https://git.daplie.com/Daplie/greenlock-cluster#readme","gitHead":"901d3b4a1ab4e00a88f07a95112f9d30b2b6c8b2","_id":"greenlock-express@2.0.8","_shasum":"9ed87420aad4957efe096514934051b8cf2f4eba","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"drewwarrentiy","email":"drewwarrentiy@gmail.com"},"dist":{"shasum":"9ed87420aad4957efe096514934051b8cf2f4eba","tarball":"https://registry.npmjs.org/greenlock-express/-/greenlock-express-2.0.8.tgz"},"maintainers":[{"name":"coolaj86","email":"coolaj86@gmail.com"},{"name":"drewwarrentiy","email":"drewwarrentiy@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/greenlock-express-2.0.8.tgz_1485381874090_0.7647739935200661"}},"2.0.9":{"name":"greenlock-express","version":"2.0.9","description":"Free SSL and managed or automatic HTTPS for node.js with Express, Koa, Connect, Hapi, and all other middleware systems.","main":"lex.js","directories":{"example":"examples"},"dependencies":{"le-challenge-fs":"^2.0.4","le-sni-auto":"^2.0.1","le-store-certbot":"^2.0.3","greenlock":"^2.1.9","localhost.daplie.com-certificates":"^1.2.3","redirect-https":"^1.1.0"},"devDependencies":{},"scripts":{"test":"node examples/serve.js"},"repository":{"type":"git","url":"https://git.daplie.com/Daplie/greenlock-express"},"keywords":["acme","cloud","cluster","free","greenlock","https","le","letsencrypt","multi-core","node","node.js","scale","ssl","tls"],"author":{"name":"AJ ONeal","email":"aj@daplie.com","url":"https://daplie.com/"},"license":"(MIT OR Apache-2.0)","bugs":{"url":"https://git.daplie.com/Daplie/greenlock-express/issues"},"homepage":"https://git.daplie.com/Daplie/greenlock-express#readme","gitHead":"19cf4536b41d9a66c41d4a306871185307a21139","_id":"greenlock-express@2.0.9","_shasum":"ccfd915e3d20baa47831d032eea982f69d82ead5","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"drewwarrentiy","email":"drewwarrentiy@gmail.com"},"dist":{"shasum":"ccfd915e3d20baa47831d032eea982f69d82ead5","tarball":"https://registry.npmjs.org/greenlock-express/-/greenlock-express-2.0.9.tgz"},"maintainers":[{"name":"coolaj86","email":"coolaj86@gmail.com"},{"name":"drewwarrentiy","email":"drewwarrentiy@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/greenlock-express-2.0.9.tgz_1485965893436_0.9710260643623769"}},"2.0.10":{"name":"greenlock-express","version":"2.0.10","description":"Free SSL and managed or automatic HTTPS for node.js with Express, Koa, Connect, Hapi, and all other middleware systems.","main":"lex.js","directories":{"example":"examples"},"dependencies":{"le-challenge-fs":"^2.0.4","le-sni-auto":"^2.0.1","le-store-certbot":"^2.0.3","greenlock":"^2.1.9","localhost.daplie.com-certificates":"^1.2.3","redirect-https":"^1.1.0"},"devDependencies":{},"scripts":{"test":"node examples/serve.js"},"repository":{"type":"git","url":"git+https://git.daplie.com/Daplie/greenlock-express.git"},"keywords":["acme","cloud","cluster","free","greenlock","https","le","letsencrypt","multi-core","node","node.js","scale","ssl","tls"],"author":{"name":"AJ ONeal","email":"aj@daplie.com","url":"https://daplie.com/"},"license":"(MIT OR Apache-2.0)","bugs":{"url":"https://git.daplie.com/Daplie/greenlock-express/issues"},"homepage":"https://git.daplie.com/Daplie/greenlock-express#readme","gitHead":"5047d9aa9616d49ff6969c6ae1a66ad22b2b4323","_id":"greenlock-express@2.0.10","_shasum":"c569a1a59a81784d368677c72585edae42516166","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"drewwarrentiy","email":"drewwarrentiy@gmail.com"},"dist":{"shasum":"c569a1a59a81784d368677c72585edae42516166","tarball":"https://registry.npmjs.org/greenlock-express/-/greenlock-express-2.0.10.tgz"},"maintainers":[{"name":"coolaj86","email":"coolaj86@gmail.com"},{"name":"creationix","email":"tim@creationix.com"},{"name":"daplieinc","email":"npm@daplie.com"},{"name":"drewwarrentiy","email":"drewwarrentiy@gmail.com"},{"name":"jimh","email":"jim.hager@daplie.com"},{"name":"tigerbot","email":"slgibelyou@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/greenlock-express-2.0.10.tgz_1492190055165_0.3453008043579757"}},"2.0.11":{"name":"greenlock-express","version":"2.0.11","description":"Free SSL and managed or automatic HTTPS for node.js with Express, Koa, Connect, Hapi, and all other middleware systems.","main":"lex.js","directories":{"example":"examples"},"dependencies":{"le-challenge-fs":"^2.0.4","le-sni-auto":"^2.0.1","le-store-certbot":"^2.0.3","greenlock":"^2.1.9","localhost.daplie.me-certificates":"^1.2.3","redirect-https":"^1.1.0"},"devDependencies":{},"scripts":{"test":"node examples/serve.js"},"repository":{"type":"git","url":"git+https://git.daplie.com/Daplie/greenlock-express.git"},"keywords":["acme","cloud","cluster","free","greenlock","https","le","letsencrypt","multi-core","node","node.js","scale","ssl","tls"],"author":{"name":"AJ ONeal","email":"aj@daplie.com","url":"https://daplie.com/"},"license":"(MIT OR Apache-2.0)","bugs":{"url":"https://git.daplie.com/Daplie/greenlock-express/issues"},"homepage":"https://git.daplie.com/Daplie/greenlock-express#readme","gitHead":"6abffa0620c86f503006a6f4f873f1ef2efb9c4b","_id":"greenlock-express@2.0.11","_shasum":"156f47a50e5e07f059516a3e07c81947e46d3709","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.4","_npmUser":{"name":"coolaj86","email":"coolaj86@gmail.com"},"dist":{"shasum":"156f47a50e5e07f059516a3e07c81947e46d3709","tarball":"https://registry.npmjs.org/greenlock-express/-/greenlock-express-2.0.11.tgz"},"maintainers":[{"name":"coolaj86","email":"coolaj86@gmail.com"},{"name":"drewwarrentiy","email":"drewwarrentiy@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/greenlock-express-2.0.11.tgz_1494260271213_0.8543678224086761"}}},"readme":"<!-- BANNER_TPL_BEGIN -->\n\nAbout Daplie: We're taking back the Internet!\n--------------\n\nDown with Google, Apple, and Facebook!\n\nWe're re-decentralizing the web and making it read-write again - one home cloud system at a time.\n\nTired of serving the Empire? Come join the Rebel Alliance:\n\n<a href=\"mailto:jobs@daplie.com\">jobs@daplie.com</a> | [Invest in Daplie on Wefunder](https://daplie.com/invest/) | [Pre-order Cloud](https://daplie.com/preorder/), The World's First Home Server for Everyone\n\n<!-- BANNER_TPL_END -->\n\ngreenlock-express (letsencrypt-express)\n=================\n\n[![Join the chat at https://gitter.im/Daplie/letsencrypt-express](https://badges.gitter.im/Daplie/letsencrypt-express.svg)](https://gitter.im/Daplie/letsencrypt-express?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n| [greenlock (lib)](https://git.daplie.com/Daplie/node-greenlock)\n| [greenlock-cli](https://git.daplie.com/Daplie/greenlock-cli)\n| **greenlock-express**\n| [greenlock-cluster](https://git.daplie.com/Daplie/greenlock-cluster)\n| [greenlock-koa](https://git.daplie.com/Daplie/greenlock-koa)\n| [greenlock-hapi](https://git.daplie.com/Daplie/greenlock-hapi)\n|\n\nFree SSL and managed or automatic HTTPS for node.js with Express, Koa, Connect, Hapi, and all other middleware systems.\n\n* Automatic Registration via SNI (`httpsOptions.SNICallback`)\n  * **registrations** require an **approval callback** in *production*\n* Automatic Renewal (around 80 days)\n  * **renewals** are *fully automatic* and happen in the *background*, with **no downtime**\n* Automatic vhost / virtual hosting\n\nAll you have to do is start the webserver and then visit it at its domain name.\n\nInstall\n=======\n\n```bash\nnpm install --save greenlock-express@2.x\n```\n\n**Important**: Use node v4.5+ or v6.x, node <= v4.4 has a [known bug](https://github.com/nodejs/node/issues/8053) in the `Buffer` implementation.\n\nQuickStart\n==========\n\nHere's a completely working example that will get you started:\n\n`app.js`:\n```javascript\n'use strict';\n\nrequire('greenlock-express').create({\n\n  server: 'staging'\n\n, email: 'john.doe@example.com'\n\n, agreeTos: true\n\n, approveDomains: [ 'example.com' ]\n\n, app: require('express')().use('/', function (req, res) {\n    res.end('Hello, World!');\n  })\n\n}).listen(80, 443);\n```\n\nCertificates will be stored in `~/letsencrypt`.\n\n**Important**:\n\nYou must set `server` to `https://acme-v01.api.letsencrypt.org/directory` **after**\nyou have tested that your setup works.\n\nWhy You Must Use 'staging' First\n--------------------------------\n\nThere are a number of common problems related to system configuration -\nfirewalls, ports, permissions, etc - that you are likely to run up against\nwhen using greenlock for your first time.\n\nIn order to avoid being blocked by hitting rate limits with bad requests,\nyou should always test against the `'staging'` server\n(`https://acme-staging.api.letsencrypt.org/directory`) first.\n\nMigrating from v1.x\n===================\n\nWhereas v1.x had a few hundred lines of code, v2.x is a single small file of about 50 lines.\n\nA few important things to note:\n\n* Delete your v1.x `~/letsencrypt` directory, otherwise you get this:\n  * `{ type: 'urn:acme:error:malformed', detail: 'Parse error reading JWS', status: 400 }`\n* `approveRegistration` has been replaced by `approveDomains`\n* All of the behavior has moved to the various plugins, which each have their own options\n* Use https and http directly, don't rely on the silly `.listen()` helper. It's just there for looks.\n* `lex.createAcmeResponder()` is now `lex.middleware(require('redirect-https')())` or `lex.middleware(app)`\n\nUsage\n=====\n\nThe oversimplified example was the bait\n(because everyone seems to want an example that fits in 3 lines, even if it's terribly bad practices),\nnow here's the switch:\n\n`serve.js`:\n```javascript\n'use strict';\n\n// returns an instance of node-greenlock with additional helper methods\nvar lex = require('greenlock-express').create({\n  // set to https://acme-v01.api.letsencrypt.org/directory in production\n  server: 'staging'\n\n// If you wish to replace the default plugins, you may do so here\n//\n, challenges: { 'http-01': require('le-challenge-fs').create({ webrootPath: '/tmp/acme-challenges' }) }\n, store: require('le-store-certbot').create({ webrootPath: '/tmp/acme-challenges' })\n\n// You probably wouldn't need to replace the default sni handler\n// See https://git.daplie.com/Daplie/le-sni-auto if you think you do\n//, sni: require('le-sni-auto').create({})\n\n, approveDomains: approveDomains\n});\n```\n\n```javascript\nfunction approveDomains(opts, certs, cb) {\n  // This is where you check your database and associated\n  // email addresses with domains and agreements and such\n\n\n  // The domains being approved for the first time are listed in opts.domains\n  // Certs being renewed are listed in certs.altnames\n  if (certs) {\n    opts.domains = certs.altnames;\n  }\n  else {\n    opts.email = 'john.doe@example.com';\n    opts.agreeTos = true;\n  }\n\n  // NOTE: you can also change other options such as `challengeType` and `challenge`\n  // opts.challengeType = 'http-01';\n  // opts.challenge = require('le-challenge-fs').create({});\n\n  cb(null, { options: opts, certs: certs });\n}\n```\n\n\n```javascript\n// handles acme-challenge and redirects to https\nrequire('http').createServer(lex.middleware(require('redirect-https')())).listen(80, function () {\n  console.log(\"Listening for ACME http-01 challenges on\", this.address());\n});\n\n\n\nvar app = require('express')();\napp.use('/', function (req, res) {\n  res.end('Hello, World!');\n});\n\n// handles your app\nrequire('https').createServer(lex.httpsOptions, lex.middleware(app)).listen(443, function () {\n  console.log(\"Listening for ACME tls-sni-01 challenges and serve app on\", this.address());\n});\n```\n\n**Security Warning**:\n\nIf you don't do proper checks in `approveDomains(opts, certs, cb)`\nan attacker will spoof SNI packets with bad hostnames and that will\ncause you to be rate-limited and or blocked from the ACME server.\n\n\nAPI\n===\n\nThis module is an elaborate ruse (to provide an oversimplified example and to nab some SEO).\n\nThe API is actually located at [node-greenlock options](https://git.daplie.com/Daplie/node-greenlock)\n(because all options are simply passed through to `node-greenlock` proper without modification).\n\nThe only \"API\" consists of two options, the rest is just a wrapper around `node-greenlock` to take LOC from 15 to 5:\n\n* `opts.app` An express app in the format `function (req, res) { ... }` (no `next`).\n* `lex.listen(plainPort, tlsPort)` Accepts port numbers (or arrays of port numbers) to listen on.\n\nBrief overview of some simple options for `node-greenlock`:\n\n* `opts.server` set to https://acme-v01.api.letsencrypt.org/directory in production\n* `opts.email` The default email to use to accept agreements.\n* `opts.agreeTos` When set to `true`, this always accepts the LetsEncrypt TOS. When a string it checks the agreement url first.\n* `opts.approveDomains` can be either of:\n  * An explicit array of allowed domains such as `[ 'example.com', 'www.example.com' ]`\n  * A callback `function (opts, certs, cb) { cb(null, { options: opts, certs: certs }); }` for setting `email`, `agreeTos`, `domains`, etc (as shown in usage example above)\n* `opts.renewWithin` is the **maximum** number of days (in ms) before expiration to renew a certificate.\n* `opts.renewBy` is the **minimum** number of days (in ms) before expiration to renew a certificate.\n","maintainers":[{"name":"coolaj86","email":"coolaj86@gmail.com"},{"name":"drewwarrentiy","email":"drewwarrentiy@gmail.com"}],"time":{"modified":"2017-05-08T16:17:53.982Z","created":"2017-01-17T23:28:06.655Z","2.0.7":"2017-01-17T23:28:06.655Z","2.0.8":"2017-01-25T22:04:34.329Z","2.0.9":"2017-02-01T16:18:15.312Z","2.0.10":"2017-04-14T17:14:15.413Z","2.0.11":"2017-05-08T16:17:53.982Z"},"homepage":"https://git.daplie.com/Daplie/greenlock-express#readme","keywords":["acme","cloud","cluster","free","greenlock","https","le","letsencrypt","multi-core","node","node.js","scale","ssl","tls"],"repository":{"type":"git","url":"git+https://git.daplie.com/Daplie/greenlock-express.git"},"author":{"name":"AJ ONeal","email":"aj@daplie.com","url":"https://daplie.com/"},"bugs":{"url":"https://git.daplie.com/Daplie/greenlock-express/issues"},"license":"(MIT OR Apache-2.0)","readmeFilename":"README.md","users":{"tpaul":true},"_attachments":{},"_etag":"W/\"59109a31-43a8\"","_lastModified":"Mon, 08 May 2017 16:17:53 GMT","_cached":true}